#version 430
layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 3, r32ui) uniform coherent uimage2D storageTexture1;
layout(binding = 4, r32ui) uniform coherent uimage2D storageTexture2;
layout(binding = 5, r32ui) uniform coherent uimage2D storageTexture3;

layout(push_constant) uniform Push {
	mat4 transform;
	mat4 projectionView;
	uint dataOffset;
	ivec3 vbPos;
	ivec3 vbSize;
} push;

layout(set = 0, binding = 0) uniform Matrices {
    mat4 view;
    mat4 projection;
    mat4 inverseView;
		mat4 inverseProjection;
} matrices;

ivec2 res = ivec2(1920, 1080);
float rayLength = 100;

void ssgi()
{
//		ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
//
//    uint shadow = 0;
//		uint depth = imageLoad(storageTexture1, coord).x;
//		for (int i = 0; i < 9; ++i)
//		{
//			if (i == 4)
//				continue;
//			
//			ivec2 cur = ivec2(i % 3 - 1, i / 3 - 1);
//			
//			shadow += imageLoad(storageTexture1, coord + cur).x;
//		}
//
//    imageAtomicExchange(storageTexture3, coord, shadow);
}

void main() {
	ssgi();

	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	
//	imageAtomicExchange(storageTexture3,  coord, imageLoad(storageTexture2, coord).x);

	if (imageLoad(storageTexture1, coord).x == 0 || imageAtomicExchange(storageTexture2,  coord, 0) == 0)
	{
	 imageAtomicExchange(storageTexture1,  coord, 20000000);
	}
//  else
//  {
//  	 imageAtomicAdd(storageTexture1,  coord, 10);
//  }

//  imageAtomicAdd(storageTexture1,  coord, 1 + 100 * uint(sqrt(imageLoad(storageTexture1, coord).x)));

//	imageAtomicExchange(storageTexture3, coord, imageLoad(storageTexture2, coord).x);
//   uint dist = imageAtomicMax(storageTexture1,  coord,  (1 - imageLoad(storageTexture2, coord).x) * 20000000);
	 
//	 imageAtomicExchange(storageTexture2,  coord, uint(mix(uint(dist < 20000000), 1, 0)));

//    uint val = imageLoad(distanceTexture, coord).r;
//    
//    // ≈сли значение осталось "необработанным"
//    if (val == floatBitsToUint(20000000.0f)) {
//        // ћожно выполнить какие-то специальные действи€
//        // Ќапример, пометить особым значением
//        imageStore(distanceTexture, coord, uvec4(floatBitsToUint(-1.0f)));
//    }
}